#
# 相对于其他标的的强度
#

declare lower;

input relSymbol = "QQQ";
input averageType = averageType.EXPONENTIAL;
input length = 21;
input long_length = 144;
input rel_length = 5;

def ds = (close - MovingAverage(averageType, close, length)) / close;
def dr = (close(relSymbol) - MovingAverage(averageType, close(relSymbol), length)) / close(relSymbol);

def ds_long = (close - MovingAverage(averageType, close, long_length)) / close;
def dr_long = (close(relSymbol) - MovingAverage(averageType, close(relSymbol), long_length)) / close(relSymbol);

plot Diff = ds - dr;
plot LongDiff = MovingAverage(averageType, ds_long - dr_long, rel_length);
plot base = MovingAverage(averageType, dr, rel_length);
plot this = MovingAverage(averageType, ds, rel_length);

this.SetDefaultColor(Color.DARK_ORANGE);
base.SetDefaultColor(Color.BlACK);
LongDiff.setDefaultColor(Color.GRAY);
AddCloud(LongDiff, 0, Color.CYAN, Color.PINK);

# Diff style
Diff.SetDefaultColor(GetColor(5));
Diff.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
Diff.SetLineWeight(3);
Diff.DefineColor("Positive and Up", Color.GREEN);
Diff.DefineColor("Positive and Down", Color.DARK_GREEN);
Diff.DefineColor("Negative and Down", Color.RED);
Diff.DefineColor("Negative and Up", Color.DARK_RED);
Diff.AssignValueColor(if Diff >= 0 then if Diff > Diff[1] then Diff.color("Positive and Up") else Diff.color("Positive and Down") else if Diff < Diff[1] then Diff.color("Negative and Down") else Diff.color("Negative and Up"));